# ================================
# TASK 04: Customer Segmentation using K-Means Clustering
# Dataset: Mall Customers
# ================================

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# ----------------------------
# 1. Load dataset
# ----------------------------
url = "https://raw.githubusercontent.com/mwaskom/seaborn-data/master/mall_customers.csv"
df = pd.read_csv(url)

print("Dataset Shape:", df.shape)
print("\nFirst 5 rows:\n", df.head())
print("\nSummary Stats:\n", df.describe())

# ----------------------------
# 2. Select features for clustering
# ----------------------------
X = df[['Age', 'Annual Income (k$)', 'Spending Score (1-100)']]

# Standardize features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# ----------------------------
# 3. Find Optimal Number of Clusters (Elbow Method)
# ----------------------------
inertia = []
for k in range(1, 11):
    km = KMeans(n_clusters=k, random_state=42, n_init=10)
    km.fit(X_scaled)
    inertia.append(km.inertia_)

plt.figure(figsize=(7,5))
plt.plot(range(1, 11), inertia, marker='o')
plt.xlabel("Number of Clusters (k)")
plt.ylabel("Inertia")
plt.title("Elbow Method for Optimal k")
plt.show()

# ----------------------------
# 4. Train KMeans with Optimal k
# ----------------------------
kmeans = KMeans(n_clusters=5, random_state=42, n_init=10)
df['Cluster'] = kmeans.fit_predict(X_scaled)

# ----------------------------
# 5. Visualize Clusters
# ----------------------------
plt.figure(figsize=(8,6))
sns.scatterplot(data=df, x='Annual Income (k$)', y='Spending Score (1-100)',
                hue='Cluster', palette="viridis", s=100, alpha=0.8)
plt.title("Customer Segments (K-Means Clustering)")
plt.show()

# ----------------------------
# 6. Cluster Profiles
# ----------------------------
print("\nCluster Summary:\n")
print(df.groupby('Cluster')[['Age','Annual Income (k$)','Spending Score (1-100)']].mean())
